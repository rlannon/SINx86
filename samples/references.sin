// references.sin
// A test of the ref< T > type

decl void print(decl string s);

def int main(alloc dynamic array<string> args) {    // utilize the proper signature
    // make sure initializations work
    alloc int x: 30;
    alloc ref<int> r: x;

    // check that this actually updates x
    let r = 65535;

    // check that this also actually updates x
    alloc ptr<int> p: $r;
    let *p = 0;

    // now check to make sure references work with dynamic types
    alloc string s: "hello";
    alloc ref<string> s_ref: s;
    let s_ref = "hello, world!";    // this will actually result in divergent references

    @print(s);  // this means this should print "hello"
                // (the original needed to be reallocated when we were working with the reference)

    return 0;
}
